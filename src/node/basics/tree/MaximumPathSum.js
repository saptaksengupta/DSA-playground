'use strict';
// Generated By lexicon-dsa CLI tool.
// Author: Saptak Sengupta(deeps.sengupta@gmail.com)
// Github: https://github.com/saptaksengupta/

// Diameter of binary tree can be calculated as
// -- Longest path between two nodes
// -- Path does not need to pass via root.

function Tree(value) {
    this.value = value;
    this.left = null;
    this.right = null;
}

function getMaxPathSum(root) {
    var max = [];
    max[0] = 0;
    getMaxSum(root, max);
    return max[0];
}

function getMaxSum(root, maxi) {
    if (root == null) {
        return 0;
    }

    var left = getMaxSum(root.left, maxi);
    var right = getMaxSum(root.right, maxi);

    maxi[0] = Math.max(maxi[0], left + right + root.value);
    
    return root.value + Math.max(left, right);
}



function main() {
    var tree = new Tree(1);
    tree.left = new Tree(2);
    tree.right = new Tree(3);
    tree.right.left = new Tree(4);
    tree.right.left.left = new Tree(5);
    tree.right.left.left.left = new Tree(5);
    console.log(getMaxPathSum(tree));
}

main();

